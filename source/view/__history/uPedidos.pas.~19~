unit uPedidos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs,  Vcl.StdCtrls, Data.DB, Vcl.Grids,
  Vcl.DBGrids,udmvendas, Vcl.Buttons, Vcl.ComCtrls, Vcl.ExtCtrls, Vcl.Mask,
  Vcl.DBCtrls, IBX.IBCustomDataSet, IBX.IBQuery, uPesquisa, IBX.IBTable,
  Datasnap.DBClient, Datasnap.Provider, uUtil;

type
  TfrmPedidos = class(TForm)
    dsPedido: TDataSource;
    dsItensPedido: TDataSource;
    Panel1: TPanel;
    Label1: TLabel;
    Label3: TLabel;
    Label2: TLabel;
    btnPesquisar: TBitBtn;
    Panel2: TPanel;
    btnNovoPedido: TBitBtn;
    btnGravarPedido: TBitBtn;
    edtId_Cliente: TDBEdit;
    DBEdit1: TDBEdit;
    DBEdit2: TDBEdit;
    cdsPedidos: TClientDataSet;
    cdsCliPed: TClientDataSet;
    GroupBox1: TGroupBox;
    DBGrid1: TDBGrid;
    dspPedidos: TDataSetProvider;
    dspCliPed: TDataSetProvider;
    dsCliPed: TDataSource;
    DBEdit4: TDBEdit;
    dsProdPed: TDataSource;
    cdsPrdPed: TClientDataSet;
    dspProdPed: TDataSetProvider;
    cdsItensPedido: TClientDataSet;
    dspItensPedido: TDataSetProvider;
    Panel3: TPanel;
    DBEdit3: TDBEdit;
    Label5: TLabel;
    cdsItensPedidoID_PEDIDO: TIntegerField;
    cdsItensPedidoID_ITENS_PEDIDO: TIntegerField;
    cdsItensPedidoID_PRODUTO: TIntegerField;
    cdsItensPedidoDESCRICAO: TWideStringField;
    cdsItensPedidoMARCA: TWideStringField;
    cdsItensPedidoVALOR_UNITARIO: TBCDField;
    cdsItensPedidoVALOR_TOTAL: TBCDField;
    cdsPedidosID_PEDIDO: TIntegerField;
    cdsPedidosID_CLIENTE: TIntegerField;
    cdsPedidosDATA_PEDIDO: TDateTimeField;
    cdsPedidosTOTAL_PEDIDO: TBCDField;
    cdsItensPedidoQUANTIDADE: TBCDField;
    DBNavigator1: TDBNavigator;
    btnExcluirItem: TBitBtn;
    cdsCliPedID_CLIENTE: TIntegerField;
    cdsCliPedCNPJ: TWideStringField;
    cdsCliPedNOME_FANTASIA: TWideStringField;
    cdsCliPedRAZAO_SOCIAL: TWideStringField;
    cdsCliPedTELEFONE: TWideStringField;
    cdsCliPedLOGRADOURO: TWideStringField;
    cdsCliPedNUMERO_END: TWideStringField;
    cdsCliPedBAIRRO: TWideStringField;
    cdsCliPedCIDADE: TWideStringField;
    cdsCliPedCOMPLEMENTO_END: TWideStringField;
    cdsCliPedUF: TWideStringField;
    btnAlterarPedido: TBitBtn;
    btnPesqPedido: TBitBtn;
    cdsItensPedidoNumItem: TIntegerField;
    Panel4: TPanel;
    btnAddItem: TBitBtn;
    Label4: TLabel;
    btnPesqProd: TBitBtn;
    edtDescProdPesq: TEdit;
    edtVlrUnitario: TEdit;
    Label10: TLabel;
    edtQuant: TEdit;
    Label9: TLabel;
    edtTotalIem: TEdit;
    Label8: TLabel;
    Label7: TLabel;
    Label6: TLabel;
    BitBtn1: TBitBtn;
    procedure btnNovoPedidoClick(Sender: TObject);
    procedure btnPesquisarClick(Sender: TObject);
    procedure btnGravarPedidoClick(Sender: TObject);
    procedure btnPesqProdClick(Sender: TObject);
    procedure edtQuantExit(Sender: TObject);
    procedure edtQuantKeyPress(Sender: TObject; var Key: Char);
    procedure edtVlrUnitarioKeyPress(Sender: TObject; var Key: Char);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnAddItemClick(Sender: TObject);
    procedure btnAlterarPedidoClick(Sender: TObject);
    procedure btnExcluirItemClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnPesqPedidoClick(Sender: TObject);
    procedure dsItensPedidoDataChange(Sender: TObject; Field: TField);
    procedure dsPedidoDataChange(Sender: TObject; Field: TField);
    procedure BitBtn1Click(Sender: TObject);
  private
    { Private declarations }
    CodItemPesq : Integer;
    function BuscaClientePedido(codCli: Integer):String;
    procedure InicializaPedido;
    procedure AtualizaTotalPedido;
    procedure CarregaDadosRelatorio;
  public
    { Public declarations }
  end;

var
  frmPedidos: TfrmPedidos;

implementation

{$R *.dfm}

procedure TfrmPedidos.btnExcluirItemClick(Sender: TObject);
var
  msg: String;

begin
  msg :=  'Deseja excluir o item: '+ cdsItensPedidoDESCRICAO.asstring+ '?' ;

  If  MessageDlg(msg,mtConfirmation,[mbyes,mbno],0)=mryes then
  begin
    try
      cdsItensPedido.delete;
      cdsItensPedido.ApplyUpdates(1);
      ShowMessage('item excluído com sucesso.');
      cdsItensPedido.Refresh;

     Except
    on E: Exception do
      ShowMessage('Erro ao tentar excluir o item: ' + E.Message );
    end;
  end;
end;

procedure TfrmPedidos.AtualizaTotalPedido;
var
  vlrTot: Double;
begin
  vlrTot := 0;
  cdsItensPedido.DisableControls;
  try
    cdsItensPedido.First;

    while not cdsItensPedido.eof do
    begin
      vlrTot := vlrTot + cdsItensPedidoVALOR_TOTAL.AsFloat;
      cdsItensPedido.Next;
    end;

    cdsPedidosTOTAL_PEDIDO.Value := vlrTot;

  finally
    cdsItensPedido.EnableControls;
  end;


end;

procedure TfrmPedidos.BitBtn1Click(Sender: TObject);
begin
  close;
end;

procedure TfrmPedidos.btnAddItemClick(Sender: TObject);
begin
  try
    if not cdsPedidos.Active then
      cdsPedidos.Open;
    cdsPedidos.Edit;
    if not cdsItensPedido.Active then
      cdsItensPedido.Open;
    cdsItensPedido.Append;
    cdsItensPedidoID_PEDIDO.Value := cdsPedidosID_PEDIDO.AsInteger;
    cdsItensPedidoID_PRODUTO.Value := CodItemPesq;
    cdsItensPedidoQUANTIDADE.Value := StrToFloat(edtQuant.Text);
    cdsItensPedidoVALOR_UNITARIO.Value := StrToFloat(edtVlrUnitario.Text);
    cdsItensPedidoVALOR_TOTAL.Value := StrToFloat(edtTotalIem.Text);
    cdsItensPedido.ApplyUpdates(1);
    cdsItensPedido.Refresh;
    ShowMessage('Item adicionado com sucesso.');
    AtualizaTotalPedido;
    cdsPedidos.ApplyUpdates(1);
    cdsPedidos.Refresh;
  Except
    on E: Exception do
      ShowMessage('Erro ao tentar gravar o item: ' + E.Message );
  end;

end;

procedure TfrmPedidos.btnAlterarPedidoClick(Sender: TObject);
begin
  if not cdsPedidos.Active then
    cdsPedidos.open;
  cdspedidos.Edit;
  btnPesquisar.Enabled := true;
end;

procedure TfrmPedidos.btnGravarPedidoClick(Sender: TObject);
begin
  btnNovoPedido.Enabled := true;;
  btnAlterarPedido.Enabled := true;

  try
    if cdsPedidos.State in [dsInsert, dsEdit] then
    begin
      cdsPedidos.ApplyUpdates(1);
      ShowMessage('Pedido gravado com sucesso.');
    end;
    btnPesqPedido.Enabled := False;
  Except
    on E: Exception do
      ShowMessage('Erro ao tentar gravar o pedido: ' + E.Message );
  end;

end;

procedure TfrmPedidos.btnNovoPedidoClick(Sender: TObject);
begin
  InicializaPedido;
  btnPesquisar.SetFocus;
  btnNovoPedido.Enabled := false;
  btnAlterarPedido.Enabled := false;
  btnPesquisar.Enabled := true;
end;

procedure TfrmPedidos.btnPesqPedidoClick(Sender: TObject);
begin
  try
    cdsPedidos.Close;
    FrmPesquisa := TFrmPesquisa.Create(self,'PEDIDO');
    FrmPesquisa.ShowModal;
    cdsPedidos.Open;
  finally
    FrmPesquisa.Free;
  end;

end;

procedure TfrmPedidos.btnPesqProdClick(Sender: TObject);
begin
  try
    FrmPesquisa := TFrmPesquisa.Create(self,'PRODUTO_PEDIDO');
    FrmPesquisa.ShowModal;
    edtVlrUnitario.Text := FormatFloat('0.00', DmVendas.qryProdPesqPRECO.AsFloat);
    edtDescProdPesq.Text := DmVendas.qryProdPesqDESCRICAO.AsString;
    CodItemPesq := DmVendas.qryProdPesqID_PRODUTO.AsInteger;
    dmvendas.qryProdPesq.Close;
    btnAddItem.Enabled := true;

  finally
    FrmPesquisa.Free;
  end;
end;

procedure TfrmPedidos.btnPesquisarClick(Sender: TObject);
begin
  try

    FrmPesquisa := TFrmPesquisa.Create(self,'CLIENTE_PEDIDO');
    FrmPesquisa.ShowModal;
    cdsPedidosID_CLIENTE.Value := DmVendas.qryCliPesqID_CLIENTE.AsInteger;
    DmVendas.qryCliPesq.close;

  finally
    FrmPesquisa.Free;
  end;

end;

function TfrmPedidos.BuscaClientePedido(codCli: Integer): String;
var
  qryAux: TIBQuery;

begin
 // qryAux := TIB

end;

procedure TfrmPedidos.CarregaDadosRelatorio;
begin

end;

procedure TfrmPedidos.dsItensPedidoDataChange(Sender: TObject; Field: TField);
begin
  btnAddItem.Enabled := (cdsItensPedido.Active) and (cdsItensPedido.RecordCount > 0);
  btnExcluirItem.Enabled := btnAddItem.Enabled;
end;

procedure TfrmPedidos.dsPedidoDataChange(Sender: TObject; Field: TField);
begin
 // btnNovoPedido.Enabled := (cdsPedidos.Active) and (cdsPedidos.RecordCount > 0);
  btnAlterarPedido.Enabled := (cdsPedidos.Active) and (cdsPedidos.RecordCount > 0);
  btnGravarPedido.Enabled := cdsPedidos.State in [dsInsert,dsEdit];
end;

procedure TfrmPedidos.edtQuantExit(Sender: TObject);
var
  quant,
  vlritem,
  total: Double;
begin
  quant   := strToFloat(edtQuant.Text);
  vlritem := strToFloat(edtVlrUnitario.Text);
  total := quant * vlritem;
  edtTotalIem.Text := FormatFloat('0.00', total);
end;

procedure TfrmPedidos.edtQuantKeyPress(Sender: TObject; var Key: Char);
begin
   Key := TUtil.NumberFloatOnly(key,TEdit(Sender).Text);
end;

procedure TfrmPedidos.edtVlrUnitarioKeyPress(Sender: TObject; var Key: Char);
begin
   Key := TUtil.NumberFloatOnly(key,TEdit(Sender).Text);
end;

procedure TfrmPedidos.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  cdsPedidos.Close;
  cdsItensPedido.Close;
  cdsCliPed.Close;
  cdsPrdPed.Close;
  Action := caFree;
  Release;
  frmPedidos := nil;
end;

procedure TfrmPedidos.FormCreate(Sender: TObject);
begin
 if not cdsPedidos.Active then
    cdsPedidos.open;
 if not cdsItensPedido.Active then
    cdsItensPedido.open;
  if not cdsCliPed.Active then
    cdsCliPed.open;
  btnPesquisar.Enabled := false;

end;

procedure TfrmPedidos.InicializaPedido;
begin
  if not cdsPedidos.Active then
    cdsPedidos.open;

  cdspedidos.Append;
  cdsPedidos.FieldByName('DATA_PEDIDO').Value := now;
  cdsPedidos.FieldByName('TOTAL_PEDIDO').Value := 0;

end;

end.
