/******************************************************************************/
/*           Generated by IBExpert 2023.9.13.1 30/11/2023 20:03:08            */
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1252;

CREATE DATABASE 'C:\Users\marce\OneDrive\Documentos\ProjetoGuarani\DB\VENDAS_DB.fdb'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET WIN1252 COLLATION WIN1252;



/******************************************************************************/
/*                                 Generators                                 */
/******************************************************************************/

CREATE GENERATOR GEN_CLIENTES_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_CLIENTES_ID TO 22;

CREATE GENERATOR GEN_ENDERECO_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_ENDERECO_ID TO 0;

CREATE GENERATOR GEN_ITENS_PEDIDO_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_ITENS_PEDIDO_ID TO 15;

CREATE GENERATOR GEN_PEDIDO_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_PEDIDO_ID TO 8;

CREATE GENERATOR GEN_PRODUTO_ID START WITH 0 INCREMENT BY 1;
SET GENERATOR GEN_PRODUTO_ID TO 7;



/******************************************************************************/
/*                                 Exceptions                                 */
/******************************************************************************/

CREATE EXCEPTION VALIDA_TELEFONE 'O CAMPO TELEFONE NÃO PODE SER NULO OU EM BRANCO';



/******************************************************************************/
/*                                   Tables                                   */
/******************************************************************************/



CREATE TABLE CLIENTES (
    ID_CLIENTE       INTEGER NOT NULL,
    NOME_FANTASIA    VARCHAR(50) NOT NULL,
    RAZAO_SOCIAL     VARCHAR(50),
    CNPJ             VARCHAR(14),
    TELEFONE         VARCHAR(15) NOT NULL,
    LOGRADOURO       VARCHAR(50),
    NUMERO_END       VARCHAR(20),
    BAIRRO           VARCHAR(50),
    CIDADE           VARCHAR(50),
    UF               CHAR(2),
    COMPLEMENTO_END  VARCHAR(50)
);

CREATE TABLE ITENS_PEDIDO (
    ID_ITENS_PEDIDO  INTEGER NOT NULL,
    ID_PEDIDO        INTEGER NOT NULL,
    ID_PRODUTO       INTEGER NOT NULL,
    VALOR_UNITARIO   NUMERIC(15,2) NOT NULL,
    VALOR_TOTAL      NUMERIC(15,2),
    QUANTIDADE       NUMERIC(15,2) DEFAULT 0 NOT NULL
);

CREATE TABLE PEDIDO (
    ID_PEDIDO     INTEGER NOT NULL,
    ID_CLIENTE    INTEGER NOT NULL,
    TOTAL_PEDIDO  NUMERIC(18,2),
    DATA_PEDIDO   TIMESTAMP
);

CREATE TABLE PRODUTO (
    ID_PRODUTO  INTEGER NOT NULL,
    DESCRICAO   VARCHAR(50) NOT NULL,
    MARCA       VARCHAR(50) NOT NULL,
    PRECO       NUMERIC(15,2) NOT NULL
);



/******************************************************************************/
/*                                Primary keys                                */
/******************************************************************************/

ALTER TABLE CLIENTES ADD CONSTRAINT PK_CLIENTES PRIMARY KEY (ID_CLIENTE);
ALTER TABLE ITENS_PEDIDO ADD CONSTRAINT PK_ITENS_PEDIDO PRIMARY KEY (ID_ITENS_PEDIDO);
ALTER TABLE PEDIDO ADD CONSTRAINT PK_PEDIDO PRIMARY KEY (ID_PEDIDO);
ALTER TABLE PRODUTO ADD CONSTRAINT PK_PRODUTO PRIMARY KEY (ID_PRODUTO);


/******************************************************************************/
/*                                Foreign keys                                */
/******************************************************************************/

ALTER TABLE ITENS_PEDIDO ADD CONSTRAINT FK_ITENS_PEDIDO_1 FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO (ID_PEDIDO);
ALTER TABLE ITENS_PEDIDO ADD CONSTRAINT FK_ITENS_PEDIDO_2 FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO (ID_PRODUTO);
ALTER TABLE PEDIDO ADD CONSTRAINT FK_PEDIDO_1 FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES (ID_CLIENTE);


/******************************************************************************/
/*                                  Triggers                                  */
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/*                            Triggers for tables                             */
/******************************************************************************/



/* Trigger: CLIENTES_BI */
CREATE TRIGGER CLIENTES_BI FOR CLIENTES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_cliente is null) then
    new.id_cliente = gen_id(gen_clientes_id,1);
end
^

/* Trigger: ITENS_PEDIDO_BI */
CREATE TRIGGER ITENS_PEDIDO_BI FOR ITENS_PEDIDO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_itens_pedido is null) then
    new.id_itens_pedido = gen_id(gen_itens_pedido_id,1);
end
^

/* Trigger: PEDIDO_BI */
CREATE TRIGGER PEDIDO_BI FOR PEDIDO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_pedido is null) then
    new.id_pedido = gen_id(gen_pedido_id,1);
end
^

/* Trigger: PRODUTO_BI */
CREATE TRIGGER PRODUTO_BI FOR PRODUTO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_produto is null) then
    new.id_produto = gen_id(gen_produto_id,1);
end
^

/* Trigger: VALIDATELEFONE */
CREATE TRIGGER VALIDATELEFONE FOR CLIENTES
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  /* Trigger para nao aceitar cliente sem telefone*/

  if (COALESCE(trim(NEW.TELEFONE), '') = '') then
    Exception VALIDA_TELEFONE;
end
^
SET TERM ; ^

